# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'hw2.ui'
#
# Created by: PyQt5 UI code generator 5.15.7
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtGui import QImage, QPainter, QPen, QPixmap
from PyQt5.QtCore import Qt, QPoint
from PyQt5.QtWidgets import QLabel, QVBoxLayout, QWidget
from PyQt5.QtWidgets import QGraphicsView, QGraphicsScene
from PyQt5.QtGui import QImageWriter



class Ui_MainWindow(object):
    
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(1500, 800)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.drawing_board_widget = DrawingBoardWidget(self.centralwidget)
        self.drawing_board_widget.setObjectName("drawing_board_widget")
        self.drawing_board_widget.setGeometry(QtCore.QRect(900, 250, 1000, 300))  
        MainWindow.setCentralWidget(self.centralwidget)

        self.prediction_result_label = QtWidgets.QLabel(self.centralwidget)
        self.prediction_result_label.setGeometry(QtCore.QRect(900, 600, 200, 50))  
        self.prediction_result_label.setObjectName("prediction_result_label")
        self.prediction_result_label.setAlignment(QtCore.Qt.AlignCenter)
        self.prediction_result_label.setText("Predicted digit: ")
        
        

      




        self.load_data = QtWidgets.QGroupBox(self.centralwidget)
        self.load_data.setGeometry(QtCore.QRect(10, 30, 151, 501))
        self.load_data.setObjectName("load_data")

        
        self.load_image_1 = QtWidgets.QPushButton(self.load_data)
        self.load_image_1.setGeometry(QtCore.QRect(30, 160, 91, 23))
        self.load_image_1.setObjectName("load_image_1")
        self.load_image_2 = QtWidgets.QPushButton(self.load_data)
        self.load_image_2.setGeometry(QtCore.QRect(30, 270, 91, 23))
        self.load_image_2.setObjectName("load_image_2")

        

        self.image_label_1 = QtWidgets.QLabel(self.load_data)
        self.image_label_1.setGeometry(QtCore.QRect(30, 210, 91, 16))
        self.image_label_1.setObjectName("image_label_1")
        self.image_label_2 = QtWidgets.QLabel(self.load_data)
        self.image_label_2.setGeometry(QtCore.QRect(30, 320, 91, 16))
        self.image_label_2.setObjectName("image_label_2")
        #1111111111111111111111111111111111111111111111111111111111111111111111111
        self.image_processing = QtWidgets.QGroupBox(self.centralwidget)#1主框
        self.image_processing.setGeometry(QtCore.QRect(180, 30, 151, 301))
        self.image_processing.setObjectName("image_processing")
        
        self.draw_contour = QtWidgets.QPushButton(self.image_processing)
        self.draw_contour.setGeometry(QtCore.QRect(10, 50, 130, 23))
        self.draw_contour.setObjectName("draw_contour")

        self.count_coin = QtWidgets.QPushButton(self.image_processing)
        self.count_coin.setGeometry(QtCore.QRect(10, 160, 130, 23))
        self.count_coin.setObjectName("count_coin")

        self.count_coin_label_1 = QtWidgets.QLabel(self.image_processing)
        self.count_coin_label_1.setGeometry(QtCore.QRect(5, 210, 150, 16))
        self.count_coin_label_1.setObjectName("count_coin_label_1")

        #555555555555555555555555555555555555555555555555555555555555555555555
        self.ResNet50 = QtWidgets.QGroupBox(self.centralwidget)#5主框
        self.ResNet50.setGeometry(QtCore.QRect(520, 30, 200, 301))
        self.ResNet50.setObjectName("ResNet50")

        self.show_image51 = QtWidgets.QPushButton(self.ResNet50)
        self.show_image51.setGeometry(QtCore.QRect(10, 50, 170, 23))
        self.show_image51.setObjectName("show_image51")

        self.Show_model_structure = QtWidgets.QPushButton(self.ResNet50)
        self.Show_model_structure.setGeometry(QtCore.QRect(10, 100, 170, 23))
        self.Show_model_structure.setObjectName("Show_model_structure")

        self.Show_Comparison = QtWidgets.QPushButton(self.ResNet50)
        self.Show_Comparison.setGeometry(QtCore.QRect(10, 150, 170, 23))
        self.Show_Comparison.setObjectName("Show_Comparison")

        self.Inference = QtWidgets.QPushButton(self.ResNet50)
        self.Inference.setGeometry(QtCore.QRect(10, 200, 170, 23))
        self.Inference.setObjectName("Inference")



        
        #44444444444444444444444444444444444444444444444444444444444444444444444444444
        self.groupBox_5 = QtWidgets.QGroupBox(self.centralwidget)
        self.groupBox_5.setGeometry(QtCore.QRect(350, 400, 300, 501))
        self.groupBox_5.setObjectName("groupBox_5")

        self.show_model = QtWidgets.QPushButton(self.groupBox_5)
        self.show_model.setGeometry(QtCore.QRect(30, 50, 180, 23))
        self.show_model.setObjectName("show_model")

        self.Show_Accuracy = QtWidgets.QPushButton(self.groupBox_5)
        self.Show_Accuracy.setGeometry(QtCore.QRect(30, 100, 180, 23))
        self.Show_Accuracy.setObjectName("Show_Accuracy")
 
        
        self.predict = QtWidgets.QPushButton(self.groupBox_5)
        self.predict.setGeometry(QtCore.QRect(30, 150, 180, 23))
        self.predict.setObjectName("predict")

        self.reset = QtWidgets.QPushButton(self.groupBox_5)
        self.reset.setGeometry(QtCore.QRect(30, 200, 180, 23))
        self.reset.setObjectName("reset")
        self.reset.clicked.connect(self.drawing_board_widget.drawing_board.reset_board)

        
        




        #33333333333333333333333333333333333333333333333333333333333333333333333333333333333
        self.argument_reality = QtWidgets.QGroupBox(self.centralwidget)
        self.argument_reality.setGeometry(QtCore.QRect(350, 30, 151, 200))
        self.argument_reality.setObjectName("argument_reality")

        self.closing = QtWidgets.QPushButton(self.argument_reality)
        self.closing.setGeometry(QtCore.QRect(30, 60, 91, 23))
        self.closing.setObjectName("closing")

        self.Opening  = QtWidgets.QPushButton(self.argument_reality)
        self.Opening.setGeometry(QtCore.QRect(30, 100, 91, 23))
        self.Opening.setObjectName("Opening")


        #2222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
        self.stereo_disparity_map = QtWidgets.QGroupBox(self.centralwidget)
        self.stereo_disparity_map.setGeometry(QtCore.QRect(180, 400, 151, 301))
        self.stereo_disparity_map.setObjectName("stereo_disparity_map")
        
        self.stereo_disparity_map_2 = QtWidgets.QPushButton(self.stereo_disparity_map)
        self.stereo_disparity_map_2.setGeometry(QtCore.QRect(10, 50, 131, 23))
        self.stereo_disparity_map_2.setObjectName("stereo_disparity_map_2")


        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 858, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    
    
    
    
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.load_data.setTitle(_translate("MainWindow", "Load Data"))
        
        self.load_image_1.setText(_translate("MainWindow", "Load Image 1"))
        self.load_image_2.setText(_translate("MainWindow", "Load Image 2"))
        
        self.image_label_1.setText(_translate("MainWindow", "No image loaded"))
        self.image_label_2.setText(_translate("MainWindow", "for question 5"))

        self.image_processing.setTitle(_translate("MainWindow", "1.Hough Circle Transform"))

        #555555555555555555555555555555555555555555555555555555555555555555555555555
        self.ResNet50.setTitle(_translate("MainWindow", "5.ResNet50"))
        self.show_image51.setText(_translate("MainWindow", "5.1 show image"))#5.1
        self.Show_model_structure.setText(_translate("MainWindow", "         5.2 Show model structure"))#5.2  
        self.Show_Comparison.setText(_translate("MainWindow", "   5.3 Show Comparison"))#5.3
        self.Inference.setText(_translate("MainWindow", "   5.4 Inference"))#5.3


        self.prediction_result_label.setText(_translate("MainWindow", "Predicted digit: "))

        self.draw_contour.setText(_translate("MainWindow", "1.1 Draw Contour"))
        self.count_coin.setText(_translate("MainWindow", "1.2 Count coins"))
        self.count_coin_label_1.setText(_translate("MainWindow", "There are _ coins in image"))

        #44444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444444

        self.groupBox_5.setTitle(_translate("MainWindow", "4.MNIST Classifier Using VGG19 with BN"))
        self.show_model.setText(_translate("MainWindow", "   4.1 show_model structure"))
        self.Show_Accuracy.setText(_translate("MainWindow", "         4.2 Show Accuracy And Loss"))
        
        self.predict.setText(_translate("MainWindow", "  4.3 predict"))
        self.reset.setText(_translate("MainWindow", "  4.4 reset"))

        #3333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333333
        self.argument_reality.setTitle(_translate("MainWindow", "3. Morphology Operation "))
        self.closing.setText(_translate("MainWindow", "3.1 Closing"))
        self.Opening.setText(_translate("MainWindow", "3.2 opening"))
        
        #22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222
        self.stereo_disparity_map.setTitle(_translate("MainWindow", "2.Histogram Equalization"))
        self.stereo_disparity_map_2.setText(_translate("MainWindow", "         2.Histogram Equalization"))


# 新增一個QWidget小部件，用於包含手繪板
class DrawingBoardWidget(QtWidgets.QWidget):
    def __init__(self, parent=None):
        super(DrawingBoardWidget, self).__init__(parent)
        
        self.setup_drawing_board()

    def setup_drawing_board(self):
        self.drawing_board = DrawingBoard(self)
        layout = QtWidgets.QVBoxLayout(self)
        layout.addWidget(self.drawing_board)
    

# 新增一個手繪板部件
class DrawingBoard(QtWidgets.QWidget):
    def __init__(self, parent=None):
        super(DrawingBoard, self).__init__(parent)
        self.drawing = False
        self.last_point = QPoint()
        # 将 QImage 的大小设置为初始值
        self.image = QImage(500, 300, QImage.Format_RGB32)
        self.image.fill(Qt.black)

    def paintEvent(self, event):
        painter = QPainter(self)
        painter.drawImage(0, 0, self.image)

    def mousePressEvent(self, event):
        if event.button() == Qt.LeftButton:
            self.drawing = True
            self.last_point = event.pos()

    def mouseMoveEvent(self, event):
        if event.buttons() and Qt.LeftButton and self.drawing:
            painter = QPainter(self.image)
            painter.setPen(QPen(Qt.white, 10, Qt.SolidLine, Qt.RoundCap, Qt.RoundJoin))
            painter.drawLine(self.last_point, event.pos())
            self.last_point = event.pos()
            self.update()

    def mouseReleaseEvent(self, event):
        if event.button() == Qt.LeftButton:
            self.drawing = False

    def get_pixmap(self):
        pixmap = QPixmap.fromImage(self.image)
        return pixmap


    def reset_board(self):
        # 重置手写板内容
        self.image.fill(Qt.black)
        self.update()
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())